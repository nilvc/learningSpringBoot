1. Spring security :


In pom.xml we need "spring-boot-starter-security" dependency
This will by default provide username as "user" and a password on console.
We can provide/ customize this , tbd


2. Adding health check and metrics

management.endpoint.health.show-details=always
&
dependency -> "spring-boot-starter-actuator"

Above property in application.properties will enable various metrics in spring boot app
will be available at  /actuator endpoint.
The endpoint can be customized.


3. THYMELEAF :

It is templating engine.
Helps in creating dynamic HTML content.

@{url}
${el}
*{propertyName}

4. Caching

Hibernate is the most commonly used ORM in spring boot.
Hazelcast - cache in spring boot.


5. Validations

https://www.geeksforgeeks.org/spring-boot-validation-using-hibernate-validator/

You can put default validation on entites for checking their values before inserted the data.
dependency - <spring-boot-starter-validation>

1. You need to mark your post/put request with @Valid annotation.
2. In Entities apply required validation to specific fields
EG. @NotNull , @Size -> for string to specify min/max length.
    @Min, @Max for numbers etc.

